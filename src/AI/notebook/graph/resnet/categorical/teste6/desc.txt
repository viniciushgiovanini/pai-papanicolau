model.add(base_model)
model.add(GlobalAveragePooling2D())
model.add(Dense(256, activation='relu'))
# model.add(Dropout(0.5))
model.add(Dense(len(train_dataset.class_indices), activation='softmax'))


optimizer = RMSprop(learning_rate=0.001)
model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy' ,tf.keras.metrics.AUC(num_thresholds=3),  tf.keras.metrics.Recall(), tf.keras.metrics.Precision()])

# Exiba um resumo do modelo
start_time = time.time()

epochs = 205

checkpoint = ModelCheckpoint('best_model.hdf5', monitor='val_recall', verbose=1, save_best_only=True, mode='max')

resultados = model.fit(
    train_dataset,
    steps_per_epoch=140,
    epochs=epochs,
    validation_data=test_dataset,
    callbacks=[checkpoint]
)